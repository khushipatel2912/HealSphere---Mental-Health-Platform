---
- name: Deploy HealSphere App and ELK Stack to Kubernetes
  hosts: localhost
  gather_facts: false
  connection: local

  # Variables passed from Jenkins via -e
  # app_k8s_manifest_path, app_k8s_namespace
  # elk_k8s_manifest_path, elk_k8s_namespace

  tasks:
    - name: Apply HealSphere Application K8s manifests
      ansible.builtin.command:
        cmd: "kubectl apply -n {{ app_k8s_namespace }} -f {{ app_k8s_manifest_path }}"
      register: app_kubectl_apply_result
      changed_when: "'configured' in app_kubectl_apply_result.stdout or 'created' in app_kubectl_apply_result.stdout"
      failed_when: app_kubectl_apply_result.rc != 0

    - name: Show HealSphere App kubectl apply results
      ansible.builtin.debug:
        var: app_kubectl_apply_result.stdout_lines
        verbosity: 1

    - name: Apply ELK Stack K8s manifests (excluding RBAC ServiceAccount if handled separately)
      ansible.builtin.command:
        # This applies everything in the k8s-elk directory.
        # If 07-filebeat-serviceaccount.yaml is here AND its namespace is 'mindnotes', this will error.
        # It's generally better to move 07-filebeat-serviceaccount.yaml to the app_k8s_manifest_path
        # or apply it with the correct namespace in a separate task (as done below for RBAC).
        cmd: "kubectl apply -n {{ elk_k8s_namespace }} -f {{ elk_k8s_manifest_path }}"
      register: elk_kubectl_apply_result
      changed_when: "'configured' in elk_kubectl_apply_result.stdout or 'created' in elk_kubectl_apply_result.stdout"
      failed_when: elk_kubectl_apply_result.rc != 0
      # ignore_errors: yes # Consider if ELK failure should not stop app deployment

    - name: Show ELK Stack kubectl apply results
      ansible.builtin.debug:
        var: elk_kubectl_apply_result.stdout_lines
        verbosity: 1

    # --- Applying RBAC Components Individually ---
    - name: Apply Filebeat ServiceAccount
      ansible.builtin.command:
        # The ServiceAccount needs to be in the app's namespace (mindnotes)
        # Assuming 07-filebeat-serviceaccount.yaml is in the elk_k8s_manifest_path directory for now
        # AND that its metadata.namespace is correctly set to {{ app_k8s_namespace }}
        cmd: "kubectl apply -n {{ app_k8s_namespace }} -f {{ elk_k8s_manifest_path }}/07-filebeat-serviceaccount.yaml"
      register: sa_apply_result
      changed_when: "'configured' in sa_apply_result.stdout or 'created' in sa_apply_result.stdout"
      failed_when: sa_apply_result.rc != 0

    - name: Show Filebeat ServiceAccount apply results
      ansible.builtin.debug:
        var: sa_apply_result.stdout_lines
        verbosity: 1

    - name: Apply Filebeat ClusterRole
      ansible.builtin.command:
        # ClusterRole is not namespaced
        cmd: "kubectl apply -f {{ elk_k8s_manifest_path }}/08-filebeat-clusterrole.yaml"
      register: cr_apply_result
      changed_when: "'configured' in cr_apply_result.stdout or 'created' in cr_apply_result.stdout"
      failed_when: cr_apply_result.rc != 0

    - name: Show Filebeat ClusterRole apply results
      ansible.builtin.debug:
        var: cr_apply_result.stdout_lines
        verbosity: 1

    - name: Apply Filebeat ClusterRoleBinding
      ansible.builtin.command:
        # ClusterRoleBinding is not namespaced
        cmd: "kubectl apply -f {{ elk_k8s_manifest_path }}/09-filebeat-clusterrolebinding.yaml"
      register: crb_apply_result
      changed_when: "'configured' in crb_apply_result.stdout or 'created' in crb_apply_result.stdout"
      failed_when: crb_apply_result.rc != 0

    - name: Show Filebeat ClusterRoleBinding apply results
      ansible.builtin.debug:
        var: crb_apply_result.stdout_lines
        verbosity: 1

    # Add waits for deployments if needed
    # - name: Wait for Login Service deployment rollout to complete
    #   kubernetes.core.k8s_info: # This would require kubernetes.core collection to be functional
    # ...
